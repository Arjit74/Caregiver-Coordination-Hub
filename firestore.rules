rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read their own tasks
    match /tasks/{taskId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow authenticated users to create tasks with their own userId
      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid &&
                    request.resource.data.createdAt is timestamp &&
                    request.resource.data.updatedAt is timestamp;
      
      // Allow authenticated users to update their own tasks
      allow update: if request.auth != null &&
                    request.auth.uid == resource.data.userId &&
                    request.resource.data.userId == resource.data.userId &&
                    request.resource.data.updatedAt is timestamp;
      
      // Allow authenticated users to delete their own tasks
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Allow authenticated users to read their own notes
    match /notes/{noteId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow authenticated users to create notes with their own userId
      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid &&
                    request.resource.data.createdAt is timestamp &&
                    request.resource.data.updatedAt is timestamp;
      
      // Allow authenticated users to update their own notes
      allow update: if request.auth != null &&
                    request.auth.uid == resource.data.userId &&
                    request.resource.data.userId == resource.data.userId &&
                    request.resource.data.updatedAt is timestamp;
      
      // Allow authenticated users to delete their own notes
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
